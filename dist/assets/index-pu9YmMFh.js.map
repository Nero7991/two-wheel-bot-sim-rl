{"version":3,"file":"index-pu9YmMFh.js","sources":["../../src/main.js"],"sourcesContent":["/**\n * Main entry point for Two-Wheel Balancing Robot RL Web Application\n * WebGPU-accelerated machine learning environment\n */\n\n// Module imports (will be implemented in subsequent phases)\n// import { PhysicsEngine } from './physics/PhysicsEngine.js';\n// import { NeuralNetwork } from './network/NeuralNetwork.js';\n// import { TrainingManager } from './training/TrainingManager.js';\n// import { Visualizer } from './visualization/Visualizer.js';\n// import { ModelExporter } from './export/ModelExporter.js';\n\nclass TwoWheelBotRL {\n    constructor() {\n        this.canvas = null;\n        this.ctx = null;\n        this.webgpuDevice = null;\n        this.isInitialized = false;\n        this.animationId = null;\n        \n        // Performance tracking\n        this.frameCount = 0;\n        this.lastFpsTime = performance.now();\n        this.fps = 0;\n        \n        // Application state\n        this.isTraining = false;\n        this.isPaused = false;\n        this.trainingStep = 0;\n        this.episodeCount = 0;\n        this.bestScore = 0;\n    }\n\n    async initialize() {\n        console.log('Initializing Two-Wheel Balancing Robot RL Environment...');\n        \n        try {\n            // Show loading screen\n            this.showLoading(true);\n            \n            // Initialize canvas and context\n            this.initializeCanvas();\n            \n            // Check WebGPU availability and initialize\n            await this.initializeWebGPU();\n            \n            // Initialize UI controls\n            this.initializeControls();\n            \n            // Start render loop\n            this.startRenderLoop();\n            \n            this.isInitialized = true;\n            console.log('Application initialized successfully!');\n            \n        } catch (error) {\n            console.error('Failed to initialize application:', error);\n            this.showError('Failed to initialize application: ' + error.message);\n        } finally {\n            this.showLoading(false);\n        }\n    }\n\n    initializeCanvas() {\n        this.canvas = document.getElementById('simulation-canvas');\n        if (!this.canvas) {\n            throw new Error('Canvas element not found');\n        }\n        \n        this.ctx = this.canvas.getContext('2d');\n        if (!this.ctx) {\n            throw new Error('Failed to get 2D context');\n        }\n        \n        // Set canvas size to fill available space\n        this.resizeCanvas();\n        \n        // Add resize listener\n        window.addEventListener('resize', () => this.resizeCanvas());\n        \n        console.log('Canvas initialized:', this.canvas.width, 'x', this.canvas.height);\n    }\n\n    async initializeWebGPU() {\n        const statusElement = document.getElementById('webgpu-text');\n        \n        try {\n            if (!navigator.gpu) {\n                throw new Error('WebGPU not supported in this browser');\n            }\n            \n            statusElement.textContent = 'Requesting WebGPU adapter...';\n            const adapter = await navigator.gpu.requestAdapter();\n            \n            if (!adapter) {\n                throw new Error('No suitable WebGPU adapter found');\n            }\n            \n            statusElement.textContent = 'Requesting WebGPU device...';\n            this.webgpuDevice = await adapter.requestDevice();\n            \n            statusElement.textContent = 'WebGPU Available';\n            statusElement.className = 'status-available';\n            \n            console.log('WebGPU initialized successfully');\n            console.log('Adapter info:', adapter);\n            console.log('Device limits:', this.webgpuDevice.limits);\n            \n        } catch (error) {\n            console.warn('WebGPU initialization failed:', error.message);\n            statusElement.textContent = 'WebGPU Unavailable (CPU fallback)';\n            statusElement.className = 'status-unavailable';\n            \n            // Continue with CPU fallback\n            this.webgpuDevice = null;\n        }\n    }\n\n    initializeControls() {\n        // Training controls\n        document.getElementById('start-training').addEventListener('click', () => {\n            this.startTraining();\n        });\n        \n        document.getElementById('pause-training').addEventListener('click', () => {\n            this.pauseTraining();\n        });\n        \n        document.getElementById('reset-environment').addEventListener('click', () => {\n            this.resetEnvironment();\n        });\n        \n        // Visualization controls\n        document.getElementById('toggle-physics').addEventListener('click', () => {\n            console.log('Toggle physics debug view');\n            // Will be implemented in physics module\n        });\n        \n        document.getElementById('toggle-network').addEventListener('click', () => {\n            console.log('Toggle network visualization');\n            // Will be implemented in visualization module\n        });\n        \n        document.getElementById('toggle-metrics').addEventListener('click', () => {\n            console.log('Toggle metrics display');\n            // Will be implemented in visualization module\n        });\n        \n        // Model management controls\n        document.getElementById('save-model').addEventListener('click', () => {\n            console.log('Save model');\n            // Will be implemented in export module\n        });\n        \n        document.getElementById('load-model').addEventListener('click', () => {\n            console.log('Load model');\n            // Will be implemented in export module\n        });\n        \n        document.getElementById('export-model').addEventListener('click', () => {\n            console.log('Export model');\n            // Will be implemented in export module\n        });\n        \n        console.log('Controls initialized');\n    }\n\n    startTraining() {\n        if (this.isTraining) return;\n        \n        this.isTraining = true;\n        this.isPaused = false;\n        \n        document.getElementById('start-training').disabled = true;\n        document.getElementById('pause-training').disabled = false;\n        \n        console.log('Training started');\n        // Training logic will be implemented in training module\n    }\n\n    pauseTraining() {\n        if (!this.isTraining) return;\n        \n        this.isPaused = !this.isPaused;\n        \n        const pauseButton = document.getElementById('pause-training');\n        pauseButton.textContent = this.isPaused ? 'Resume Training' : 'Pause Training';\n        \n        console.log('Training', this.isPaused ? 'paused' : 'resumed');\n    }\n\n    resetEnvironment() {\n        this.isTraining = false;\n        this.isPaused = false;\n        this.trainingStep = 0;\n        this.episodeCount = 0;\n        \n        document.getElementById('start-training').disabled = false;\n        document.getElementById('pause-training').disabled = true;\n        document.getElementById('pause-training').textContent = 'Pause Training';\n        \n        this.updateUI();\n        \n        console.log('Environment reset');\n        // Reset logic will be implemented in physics and training modules\n    }\n\n    resizeCanvas() {\n        const container = document.getElementById('main-container');\n        const controlsPanel = document.getElementById('controls-panel');\n        \n        const availableWidth = container.clientWidth - controlsPanel.clientWidth;\n        const availableHeight = container.clientHeight;\n        \n        this.canvas.width = Math.max(800, availableWidth - 2); // Account for border\n        this.canvas.height = Math.max(600, availableHeight - 2);\n        \n        console.log('Canvas resized to:', this.canvas.width, 'x', this.canvas.height);\n    }\n\n    startRenderLoop() {\n        const render = (timestamp) => {\n            this.update(timestamp);\n            this.draw();\n            this.updateFPS(timestamp);\n            \n            this.animationId = requestAnimationFrame(render);\n        };\n        \n        this.animationId = requestAnimationFrame(render);\n        console.log('Render loop started');\n    }\n\n    update(timestamp) {\n        // Update simulation state\n        if (this.isTraining && !this.isPaused) {\n            this.trainingStep++;\n            \n            // Placeholder training logic\n            if (this.trainingStep % 1000 === 0) {\n                this.episodeCount++;\n                this.updateUI();\n            }\n        }\n        \n        // Update physics, neural network, etc. (will be implemented in modules)\n    }\n\n    draw() {\n        // Clear canvas\n        this.ctx.fillStyle = '#0a0a0a';\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        \n        // Draw placeholder content\n        this.drawPlaceholder();\n        \n        // Draw UI overlays (will be implemented in visualization module)\n    }\n\n    drawPlaceholder() {\n        const centerX = this.canvas.width / 2;\n        const centerY = this.canvas.height / 2;\n        \n        // Draw a simple robot placeholder\n        this.ctx.fillStyle = '#00d4ff';\n        this.ctx.fillRect(centerX - 20, centerY - 10, 40, 20);\n        \n        // Draw wheels\n        this.ctx.fillStyle = '#ffffff';\n        this.ctx.beginPath();\n        this.ctx.arc(centerX - 15, centerY + 15, 8, 0, Math.PI * 2);\n        this.ctx.arc(centerX + 15, centerY + 15, 8, 0, Math.PI * 2);\n        this.ctx.fill();\n        \n        // Draw status text\n        this.ctx.fillStyle = '#ffffff';\n        this.ctx.font = '16px Arial';\n        this.ctx.textAlign = 'center';\n        this.ctx.fillText('Two-Wheel Balancing Robot', centerX, centerY - 40);\n        this.ctx.fillText('Physics and ML modules will be implemented in next phases', centerX, centerY + 60);\n    }\n\n    updateFPS(timestamp) {\n        this.frameCount++;\n        \n        if (timestamp - this.lastFpsTime >= 1000) {\n            this.fps = Math.round(this.frameCount * 1000 / (timestamp - this.lastFpsTime));\n            this.frameCount = 0;\n            this.lastFpsTime = timestamp;\n            \n            document.getElementById('fps-counter').textContent = `FPS: ${this.fps}`;\n        }\n    }\n\n    updateUI() {\n        document.getElementById('training-step').textContent = `Step: ${this.trainingStep.toLocaleString()}`;\n        document.getElementById('episode-count').textContent = `Episode: ${this.episodeCount}`;\n        document.getElementById('best-score').textContent = `Best Score: ${this.bestScore}`;\n    }\n\n    showLoading(show) {\n        const loadingElement = document.getElementById('loading');\n        loadingElement.style.display = show ? 'flex' : 'none';\n    }\n\n    showError(message) {\n        alert('Error: ' + message);\n        console.error(message);\n    }\n\n    destroy() {\n        if (this.animationId) {\n            cancelAnimationFrame(this.animationId);\n            this.animationId = null;\n        }\n        \n        if (this.webgpuDevice) {\n            this.webgpuDevice.destroy();\n            this.webgpuDevice = null;\n        }\n        \n        console.log('Application destroyed');\n    }\n}\n\n// Application initialization\nlet app = null;\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n    try {\n        app = new TwoWheelBotRL();\n        await app.initialize();\n    } catch (error) {\n        console.error('Failed to start application:', error);\n    }\n});\n\n// Handle page unload\nwindow.addEventListener('beforeunload', () => {\n    if (app) {\n        app.destroy();\n    }\n});\n\n// Export for potential external access\nwindow.TwoWheelBotRL = TwoWheelBotRL;"],"names":["TwoWheelBotRL","__name","this","constructor","canvas","ctx","webgpuDevice","isInitialized","animationId","frameCount","lastFpsTime","performance","now","fps","isTraining","isPaused","trainingStep","episodeCount","bestScore","initialize","showLoading","initializeCanvas","initializeWebGPU","initializeControls","startRenderLoop","error","showError","message","document","getElementById","Error","getContext","resizeCanvas","window","addEventListener","statusElement","navigator","gpu","textContent","adapter","requestAdapter","requestDevice","className","startTraining","pauseTraining","resetEnvironment","disabled","updateUI","container","controlsPanel","availableWidth","clientWidth","availableHeight","clientHeight","width","Math","max","height","render","timestamp","update","draw","updateFPS","requestAnimationFrame","fillStyle","fillRect","drawPlaceholder","centerX","centerY","beginPath","arc","PI","fill","font","textAlign","fillText","round","toLocaleString","show","style","display","alert","destroy","cancelAnimationFrame","app","async"],"mappings":"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"}